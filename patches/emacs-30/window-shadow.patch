Subject: [PATCH] provide a way to control window shadows on macOS

This patch adds a new frame parameter 'ns-window-shadow' that allows
controlling whether macOS windows have shadows. This is particularly
useful when combined with undecorated or undecorated-round frames for
custom UI appearances.

Usage in Lisp:
  (add-to-list 'default-frame-alist '(ns-window-shadow . nil))
  ;; Or per-frame:
  (set-frame-parameter nil 'ns-window-shadow nil)
---
 src/frame.c  |  3 +++
 src/frame.h  |  5 +++++
 src/nsfns.m  |  6 ++++++
 src/nsterm.h |  2 ++
 src/nsterm.m | 35 +++++++++++++++++++++++++++++++++++
 5 files changed, 51 insertions(+)

diff --git a/src/frame.c b/src/frame.c
index 6a3db12054..31e28c8c08 100644
--- a/src/frame.c
+++ b/src/frame.c
@@ -971,6 +971,7 @@ make_frame (bool mini_p)
   f->want_fullscreen = FULLSCREEN_NONE;
   f->undecorated = false;
   f->undecorated_round = false;
+  f->ns_window_shadow = true;
   f->no_special_glyphs = false;
 #ifndef HAVE_NTGUI
   f->override_redirect = false;
@@ -3911,6 +3912,7 @@ static const struct frame_parm_table frame_parms[] =
   {"inhibit-double-buffering",  SYMBOL_INDEX (Qinhibit_double_buffering)},
   {"undecorated",		SYMBOL_INDEX (Qundecorated)},
   {"undecorated-round",		SYMBOL_INDEX (Qundecorated_round)},
+  {"ns-window-shadow",		SYMBOL_INDEX (Qns_window_shadow)},
   {"parent-frame",		SYMBOL_INDEX (Qparent_frame)},
   {"skip-taskbar",		SYMBOL_INDEX (Qskip_taskbar)},
   {"no-focus-on-map",		SYMBOL_INDEX (Qno_focus_on_map)},
@@ -6055,6 +6057,7 @@ syms_of_frame (void)
   DEFSYM (Qminibuffer, "minibuffer");
   DEFSYM (Qundecorated, "undecorated");
   DEFSYM (Qundecorated_round, "undecorated-round");
+  DEFSYM (Qns_window_shadow, "ns-window-shadow");
   DEFSYM (Qno_special_glyphs, "no-special-glyphs");
   DEFSYM (Qparent_frame, "parent-frame");
   DEFSYM (Qskip_taskbar, "skip-taskbar");
diff --git a/src/frame.h b/src/frame.h
index 2cab723c00..5e427b697b 100644
--- a/src/frame.h
+++ b/src/frame.h
@@ -399,6 +399,9 @@ struct frame
   /* True if this is an undecorated frame with round corners.  */
   bool_bf undecorated_round : 1;
 
+  /* True if this frame's window has a shadow (macOS only).  */
+  bool_bf ns_window_shadow : 1;
+
 #ifndef HAVE_NTGUI
   /* True if this is an override_redirect frame.  */
   bool_bf override_redirect : 1;
@@ -1083,6 +1086,8 @@ default_pixels_per_inch_y (void)
 #if defined (HAVE_WINDOW_SYSTEM)
 #define FRAME_UNDECORATED(f) ((f)->undecorated)
 #define FRAME_UNDECORATED_ROUND(f) ((f)->undecorated_round)
+#define FRAME_NS_WINDOW_SHADOW(f) ((f)->ns_window_shadow)
+
 #ifdef HAVE_NTGUI
 #define FRAME_OVERRIDE_REDIRECT(f) ((void) (f), 0)
 #else
@@ -1110,6 +1115,7 @@ default_pixels_per_inch_y (void)
 #else /* not HAVE_WINDOW_SYSTEM */
 #define FRAME_UNDECORATED(f) ((void) (f), 0)
 #define FRAME_UNDECORATED_ROUND(f) ((void) (f), 0)
+#define FRAME_NS_WINDOW_SHADOW(f) ((void) (f), 1)
 #define FRAME_OVERRIDE_REDIRECT(f) ((void) (f), 0)
 #define FRAME_PARENT_FRAME(f) ((void) (f), NULL)
 #define FRAME_SKIP_TASKBAR(f) ((void) (f), 0)
diff --git a/src/nsfns.m b/src/nsfns.m
index dd3c9564f8..0dad53a9fa 100644
--- a/src/nsfns.m
+++ b/src/nsfns.m
@@ -1050,6 +1050,7 @@ Turn the input menu (an NSMenu) into a lisp list for tracking on lisp side.
   0, /* x_set_inhibit_double_buffering */
   ns_set_undecorated,
   ns_set_undecorated_round,
+  ns_set_window_shadow,
   ns_set_parent_frame,
   0, /* x_set_skip_taskbar */
   ns_set_no_focus_on_map,
@@ -1382,6 +1383,11 @@ Turn the input menu (an NSMenu) into a lisp list for tracking on lisp side.
   FRAME_UNDECORATED_ROUND (f) = !NILP (tem) && !EQ (tem, Qunbound);
   store_frame_param (f, Qundecorated_round, FRAME_UNDECORATED_ROUND (f) ? Qt : Qnil);
 
+  tem = gui_display_get_arg (dpyinfo, parms, Qns_window_shadow, NULL, NULL,
+                             RES_TYPE_BOOLEAN);
+  FRAME_NS_WINDOW_SHADOW (f) = EQ (tem, Qunbound) || NILP (tem) ? true : !NILP (tem);
+  store_frame_param (f, Qns_window_shadow, FRAME_NS_WINDOW_SHADOW (f) ? Qt : Qnil);
+
 #ifdef NS_IMPL_COCOA
   tem = gui_display_get_arg (dpyinfo, parms, Qns_appearance, NULL, NULL,
                              RES_TYPE_SYMBOL);
diff --git a/src/nsterm.h b/src/nsterm.h
index 5604d02407..c470ad9c0c 100644
--- a/src/nsterm.h
+++ b/src/nsterm.h
@@ -1229,6 +1229,8 @@ extern void ns_set_undecorated (struct frame *f, Lisp_Object new_value,
                                 Lisp_Object old_value);
 extern void ns_set_undecorated_round (struct frame *f, Lisp_Object new_value,
                                       Lisp_Object old_value);
+extern void ns_set_window_shadow (struct frame *f, Lisp_Object new_value,
+                                  Lisp_Object old_value);
 extern void ns_set_parent_frame (struct frame *f, Lisp_Object new_value,
                                  Lisp_Object old_value);
 extern void ns_set_no_focus_on_map (struct frame *f, Lisp_Object new_value,
diff --git a/src/nsterm.m b/src/nsterm.m
index f132a9591d..d16fd6438e 100644
--- a/src/nsterm.m
+++ b/src/nsterm.m
@@ -1836,6 +1836,32 @@ ns_set_undecorated_round (struct frame *f, Lisp_Object new_value, Lisp_Object ol
     }
 }
 
+void
+ns_set_window_shadow (struct frame *f, Lisp_Object new_value, Lisp_Object old_value)
+/* --------------------------------------------------------------------------
+     Set frame F's `ns-window-shadow' parameter. If non-nil, F's window-system
+     window will have a shadow. If nil, the window will have no shadow.
+   -------------------------------------------------------------------------- */
+{
+  NSTRACE ("ns_set_window_shadow");
+
+  if (!EQ (new_value, old_value))
+    {
+      EmacsView *view = (EmacsView *)FRAME_NS_VIEW (f);
+      NSWindow *window = [view window];
+
+      block_input ();
+
+      if (window != nil)
+        {
+          FRAME_NS_WINDOW_SHADOW (f) = !NILP (new_value);
+          [window setHasShadow:FRAME_NS_WINDOW_SHADOW (f)];
+          store_frame_param (f, Qns_window_shadow, FRAME_NS_WINDOW_SHADOW (f) ? Qt : Qnil);
+        }
+
+      unblock_input ();
+    }
+}
+
 void
 ns_set_parent_frame (struct frame *f, Lisp_Object new_value, Lisp_Object old_value)
 /* --------------------------------------------------------------------------
@@ -9173,6 +9199,15 @@ - (instancetype) initWithEmacsFrame: (struct frame *) f
       [[self standardWindowButton:NSWindowZoomButton] setHidden:YES];
     }
 
+  // Set the window shadow according to the frame parameter
+  if (FRAME_NS_WINDOW_SHADOW (f))
+    {
+      [self setHasShadow:YES];
+    }
+  else
+    {
+      [self setHasShadow:NO];
+    }
+
   return self;
 }
 
-- 
2.36.1
